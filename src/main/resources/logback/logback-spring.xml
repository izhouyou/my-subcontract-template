<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <springProperty scope="context" name="serviceName" source="logback.service-name"/>
    <springProperty scope="context" name="path" source="logback.path"/>

    <!--控制台日志打印格式-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%highlight高亮,%logger{50}类名,%line行数,%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{50}:%line) - %highlight(%msg) %n</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>
        <!--打印DEBUG级以上的日志-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!--ERROR日志-->
    <appender name="error_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${path}/error-${serviceName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--当日志文件大小达到最大值时,进行压缩归档-->
            <fileNamePattern>${path}/error/${serviceName}.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大值-->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>180</maxHistory>
        </rollingPolicy>

        <!--日志文档输出格式-->
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%M:%L] [%thread] - %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>

        <!-- 过滤方式：门槛过滤，只记录ERROR级别以上的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!--INFO日志-->
    <appender name="info_file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${path}/info-${serviceName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--当日志文件大小达到最大值时,进行压缩归档-->
            <fileNamePattern>${path}/info/${serviceName}.%d{yyyy-MM-dd}.%i.log.zip</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大值-->
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!--日志文件保留天数-->
            <maxHistory>60</maxHistory>
        </rollingPolicy>

        <!--日志文档输出格式-->
        <encoder>
            <pattern>%d{ISO8601} %-5level %C{1} [%M:%L] [%thread] - %msg%n</pattern>
            <charset>UTF-8</charset> <!-- 设置字符集 -->
        </encoder>

        <!-- 过滤方式：匹配过滤，对匹配到的日志执行匹配策略 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 匹配级别 -->
            <level>DEBUG</level>
            <!-- 匹配到的执行策略 -->
            <onMatch>DENY</onMatch>
            <!-- 不匹配的执行策略 -->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>

    <root>
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="error_file" />
        <appender-ref ref="info_file" />
    </root>
</configuration>